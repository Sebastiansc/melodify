$breakpoints: (
  'small'  : 767px,
  'medium' : 992px,
  'large'  : 1200px
);

@mixin respond-to($breakpoint) {
  $value: map-get($breakpoints, $breakpoint);

  @if $value != null {
    @media (min-width: $value) {
      @content;
    }
  }

  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@mixin flex($justify) {
  display: -webkit-flex;
  display: flex;
  align-items: center;
  justify-content: $justify;
}

@mixin overlay() {
  background: -moz-radial-gradient(center, ellipse cover, rgba(0,0,0,0) 0%, rgba(0,0,0,0) 1%, rgba(0,0,0,0) 62%, rgba(0,0,0,0.85) 100%); /* FF3.6-15 */
  background: -webkit-radial-gradient(center, ellipse cover, rgba(0,0,0,0) 0%,rgba(0,0,0,0) 1%,rgba(0,0,0,0) 62%,rgba(0,0,0,0.85) 100%); /* Chrome10-25,Safari5.1-6 */
  background: radial-gradient(ellipse at center, rgba(0,0,0,0) 0%,rgba(0,0,0,0) 1%,rgba(0,0,0,0) 62%,rgba(0,0,0,0.85) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

@mixin buttonTransparent($paddingY, $paddingX) {
  border-radius: $round;
  background: transparent;
  border: 1px solid white;
  padding: $paddingY $paddingX;
}

@mixin zUp($z) {
  z-index: $z;
  position: relative;
}

@mixin searchbar($width) {

}
