$breakpoints: (
  'small'  : 767px,
  'medium' : 992px,
  'large'  : 1200px,
  'xlarge' : 1350px
);

@mixin respond-to($breakpoint) {
  $value: map-get($breakpoints, $breakpoint);

  @if $value != null {
    @media (min-width: $value) {
      @content;
    }
  }

  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

@mixin flex($justify) {
  display: -webkit-flex;
  display: flex;
  align-items: center;
  justify-content: $justify;
}

@mixin overlay() {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

@mixin button-transparent($paddingY, $paddingX) {
  border-radius: $round;
  background: transparent;
  border: 1px solid white;
  padding: $paddingY $paddingX;
}

@mixin z-up($z) {
  z-index: $z;
  position: relative;
}

@mixin orange-button($font-size) {
  background-color: $orange;
  border-color: $orange;
  font-size: $font-size;
  cursor: pointer;
  color: white;
  border-radius: $round;
}

@mixin searchbar($width) {

}

@mixin grow(){
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}
