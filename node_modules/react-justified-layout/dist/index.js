'use strict';

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var justifiedLayout = require('justified-layout');
var React = require('react');
var map = require('lodash/map');
var zip = require('lodash/zip');
var isNumber = require('lodash/isNumber');

function extractDimension(_ref) {
  var props = _ref.props;

  if (props.aspectRatio) {
    return props.aspectRatio;
  } else {
    return { height: props.style.height, width: props.style.width };
  }
  // TODO Measure the element if no props are there?
}

function normalizeDimension(dimension) {
  if (dimension.height && dimension.width) {
    return dimension.width / dimension.height;
  } else if (isNumber(dimension)) {
    return dimension;
  } else {
    return 0;
  }
}

var Style = { position: 'relative' };

var JustPropTypes = {
  boxSpacing: React.PropTypes.oneOfType([React.PropTypes.number, React.PropTypes.shape({
    horizontal: React.PropTypes.number.isRequired,
    vertical: React.PropTypes.number.isRequired
  })]),
  children: React.PropTypes.node,
  containerPadding: React.PropTypes.oneOfType([React.PropTypes.number, React.PropTypes.shape({
    bottom: React.PropTypes.number.isRequired,
    left: React.PropTypes.number.isRequired,
    right: React.PropTypes.number.isRequired,
    top: React.PropTypes.number.isRequired
  })]),
  containerWidth: React.PropTypes.number,
  forceAspectRation: React.PropTypes.oneOfType([React.PropTypes.boolean, React.PropTypes.number]),
  fullWidthBreakoutRowCadence: React.PropTypes.oneOfType([React.PropTypes.boolean, React.PropTypes.number]),
  maxNumRows: React.PropTypes.number,
  showWidows: React.PropTypes.bool,
  targetRowHeight: React.PropTypes.number,
  targetRowHeightTolerance: React.PropTypes.number
};

var JustDefaultProps = {
  boxSpacing: 10,
  containerPadding: 10,
  containerWidth: 1060,
  forceAspectRation: false,
  fullWidthBreakoutRowCadence: false,
  maxNumRows: Number.POSITIVE_INFINITY,
  showWidows: true,
  targetRowHeight: 320,
  targetRowHeightTolerance: 0.25
};

var JustifiedLayout = function (_React$Component) {
  _inherits(JustifiedLayout, _React$Component);

  function JustifiedLayout() {
    _classCallCheck(this, JustifiedLayout);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(JustifiedLayout).apply(this, arguments));
  }

  _createClass(JustifiedLayout, [{
    key: 'render',

    // See http://flickr.github.io/justified-layout/ for an explanation of what these props do
    value: function render() {
      var _props = this.props;
      var children = _props.children;
      var style = _props.style;

      var config = _objectWithoutProperties(_props, ['children', 'style']);

      var childDims = React.Children.map(children, extractDimension).map(normalizeDimension);

      var _justifiedLayout = justifiedLayout(childDims, config);

      var containerHeight = _justifiedLayout.containerHeight;
      var boxes = _justifiedLayout.boxes;

      var elementDimensions = zip(children, boxes);

      return React.createElement(
        'div',
        { style: _extends({}, Style, style, { height: containerHeight, width: this.props.containerWidth }) },
        map(elementDimensions, function (_ref2) {
          var _ref3 = _slicedToArray(_ref2, 2);

          var element = _ref3[0];
          var layout = _ref3[1];
          var height = layout.height;
          var left = layout.left;
          var top = layout.top;
          var width = layout.width;

          return React.cloneElement(element, _extends({}, element.props, {
            style: _extends({}, element.props.style, {
              position: 'absolute',
              height: height, left: left, top: top, width: width
            })
          }));
        })
      );
    }
  }]);

  return JustifiedLayout;
}(React.Component);

module.exports = JustifiedLayout;
